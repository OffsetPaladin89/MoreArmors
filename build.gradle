plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.1'
    id 'java'
}

group = 'me.offsetpaladin89'
version = '3.6'

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://github.com/deanveloper/SkullCreator/raw/mvn-repo/' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT'
    shadow 'de.tr7zw:item-nbt-api:+'
    shadow 'dev.dbassett:skullcreator:+'
    shadow 'com.github.fracpete:romannumerals4j:+'
    implementation 'org.jetbrains:annotations:+'
    implementation 'org.apache.commons:commons-lang3:+'
    implementation 'de.tr7zw:item-nbt-api:+'
    implementation 'dev.dbassett:skullcreator:+'
    implementation 'com.github.fracpete:romannumerals4j:+'
    implementation 'com.github.cryptomorin:XSeries:+'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'de.tr7zw.changeme.nbtapi', 'libs'
}
